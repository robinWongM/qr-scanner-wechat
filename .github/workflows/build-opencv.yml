name: Build OpenCV

on:
  push:
    branches:
      - build-wasm

jobs:
  build:
    strategy:
      matrix:
        include:
          - build: debug
          - build: release
            flags: -Oz
          - build: release
            flags: -O3
          - build: release
            flags: -Os
          # - build: release
          #   flags: -Oz -fno-rtti -fno-exceptions
          # - build: release
          #   flags: -O3 -fno-rtti -fno-exceptions
          # - build: release
          #   flags: -Os -fno-rtti -fno-exceptions
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: qr-scanner-wechat

      - name: Checkout Emscripten
        uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          ref: 3.1.44
          path: emsdk

      - name: Checkout OpenCV
        uses: actions/checkout@v3
        with:
          repository: opencv/opencv
          ref: 4.8.0
          path: opencv

      - name: Checkout OpenCV Contrib
        uses: actions/checkout@v3
        with:
          repository: opencv/opencv_contrib
          ref: 4.8.0
          path: opencv_contrib

      - name: Setup Emscripten
        run: |-
          cd emsdk
          ./emsdk install 3.1.44
          ./emsdk activate 3.1.44

      - name: Patch OpenCV
        run: |-
          cd opencv
          git apply ../qr-scanner-wechat/build/opencv.patch

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.build }}-${{ matrix.flags }}

      - name: Build OpenCV Release
        if: ${{ matrix.build == 'release' }}
        run: |-
          source ./emsdk/emsdk_env.sh
          emcmake python ./opencv/platforms/js/build_js.py build --build_wasm --disable_single_file --cmake_option="-DOPENCV_EXTRA_MODULES_PATH=$GITHUB_WORKSPACE/opencv_contrib/modules" --cmake_option="-DEMSCRIPTEN_LINK_FLAGS='-s EXPORTED_RUNTIME_METHODS=FS'" --cmake_option="-DCMAKE_CXX_FLAGS_RELEASE='${{ matrix.flags }}'" --build_test --build_perf

      - name: Build OpenCV Debug
        if: ${{ matrix.build == 'debug' }}
        run: |-
          source ./emsdk/emsdk_env.sh
          emcmake python ./opencv/platforms/js/build_js.py build --build_wasm --disable_single_file --cmake_option="-DOPENCV_EXTRA_MODULES_PATH=$GITHUB_WORKSPACE/opencv_contrib/modules" --cmake_option="-DEMSCRIPTEN_LINK_FLAGS='-s EXPORTED_RUNTIME_METHODS=FS'" --cmake_option="-DCMAKE_BUILD_TYPE=Debug" --build_test --build_perf

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build }}-${{ matrix.flags }}
          path: ./build/bin

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: ${{ failure() }}
